---
layout: post
title: "const T* или T const*"
language: russian
date: 2009-09-30 00:00
comments: true
blogspot: http://easy-coding.blogspot.com/2009/09/const-t-t-const.html
categories:
- cplusplus
- russian
---
Не секрет, что выражение `const T*` при объявления указателя полностью эквивалентно записи `T const*`, ибо тут важно только, что `const` стоит до знака `*`, а порядок его употребления с именем типа `Т` роли не играет:

{% codeblock lang:cpp %}
const T* p;
{% endcodeblock %}

и

{% codeblock lang:cpp %}
T const* p;
{% endcodeblock %}

объявляют указатель на константный объект, а не константный указатель, то есть значение самого указателя можно менять:

{% codeblock lang:cpp %}
T const* p;
...
p = NULL;
{% endcodeblock %}

Но менять сам объект нельзя:

{% codeblock lang:cpp %}
T const* p;
...
p->some_member = 0;   // ОШИБКА: error C2166: l-value specifies const object
{% endcodeblock %}

Но все это была вводная, и сейчас не об этом.

Меня больше интересуют читабельность исходников. Я могу ошибаться, но как мне кажется, что с общечеловеческой точки зрения употребление `const` в начале выражения (например, `const T* p;`) подразумевает константность всего выражения, и, собственно, не важно, что там на самом деле указатель, и по правилам С++ данный `const` значит только константность объекта, а не указателя.

Поэтому запись `T const* p;` может читаться несколько иначе, а именно: "тип T, который константный, и на него объявляется указатель". Читабельность немного лучше.

Конечно, все это вопросы стиля во многом, да и всегда следует в первую очередь соблюдать стиль, уже принятый существующем исходнике, но есть вы только учитесь, или начинаете новый проект и что-то еще, когда можно попробовать что-то новое в стиле, как мне кажется, не стоит отказывать себе в этом опыте.
