---
layout: post
title: 'Роберт Седжвик, "Фундаментальные алгоритмы"'
language: russian
date: 2009-07-07 00:00
comments: true
blogspot: http://easy-coding.blogspot.com/2009/07/blog-post.html
categories:
- book
- russian
---
После того, как я [жестко облажался с самопальной сортировкой][Как реализована сортировка в STL], причем облажался дважды: первый раз, когда думал, что порву по скорости STL'ный [std::sort()][], а второй - когда не понял, что все эти "ухищрения", как я думал, по ускорению [QuickSort][]'а, реализованные в STL'е Visual Studio, есть ни что иное, как просто давно придуманный [IntroSort][].

[Как реализована сортировка в STL]: /blog/russian/2009/06/18/sort-implementation-in-stl/
[std::sort()]: http://www.cplusplus.com/reference/algorithm/sort/
[QuickSort]: http://en.wikipedia.org/wiki/Quicksort
[IntroSort]: http://en.wikipedia.org/wiki/Introsort

В общем, я взял в руки:

Роберт Седжвик

[Фундаментальные алгоритмы на C++. Части 1-4. Анализ. Структуры данных. Сортировка.][]

[Фундаментальные алгоритмы на C++. Части 1-4. Анализ. Структуры данных. Сортировка.]: http://www.ozon.ru/context/detail/id/128304/?partner=easy-coding

{% img /images/covers/russian/fundamental-algorithms-1-4-cover.jpg %}

и начал освежать (а местами просто узнавать с нуля) когда-то читанное в студенчестве.

Втянулся.

Заказал вторую книгу:

Роберт Седжвик

[Фундаментальные алгоритмы на C++. Часть 5. Алгоритмы на графах.][]

[Фундаментальные алгоритмы на C++. Часть 5. Алгоритмы на графах.]: http://www.ozon.ru/context/detail/id/1317133/?partner=easy-coding

{% img /images/covers/russian/fundamental-algorithms-5-cover.jpg %}

Последние несколько лет я всегда делал основной упор на новые языки, операционные системы, организацию процесса разработки, работу над качеством и т.д. Получилось, что база как-то слегка подкосилась.

В общем, если вы все еще можете не думая сказать, например, чем лучше хеш-таблица по сравнению со сбалансированным (например, красно-черным) деревом, почему именно Splay-дерево удобно для реализации кеша, написать по памяти пирамидальную сортировку или привести пример NP-задачи, которая не является полной, то может фундамент все еще крепок.
