---
layout: post
title: "Монитор зависших процессов"
language: russian
date: 2012-01-05 00:00
comments: true
blogspot: http://easy-coding.blogspot.com/2012/01/stuck-process-detector.html
categories: 
- russian
---
Есть задача - нужна утилита для обнаружения зависших или заблокированных долгоиграющих серверных процессов. Если процесс «завис» - это значит, либо он торчит в deadlock’e, либо крутится в бесконечном цикле.

Пока есть вот такая идея - для каждого процесса, находящегося под контролем, периодически делать извне снимок стeка. Например:

    #0  0x991a8c22 in mach_msg_trap ()
    #1  0x991a81f6 in mach_msg ()
    #2  0x968870ea in __CFRunLoopServiceMachPort ()
    #3  0x96890214 in __CFRunLoopRun ()
    #4  0x9688f8ec in CFRunLoopRunSpecific ()
    #5  0x9688f798 in CFRunLoopRunInMode ()
    #6  0x92158a7f in RunCurrentEventLoopInMode ()
    #7  0x9215fd9b in ReceiveNextEventCommon ()
    #8  0x9215fc0a in BlockUntilNextEventMatchingListInMode ()
    #9  0x90010040 in _DPSNextEvent ()
    #10 0x9000f8ab in -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] ()
    #11 0x9000bc22 in -[NSApplication run] ()
    #12 0x902a018a in NSApplicationMain ()
    #13 0x0012e356 in main ()
    
Для Linux, HPUX и Solaris есть команда `pstack`, для AIX - `procstack`. Уверен, что и для Windows можно подобное замутить. Process Explorer это умеет делать, значит можно сделать и программно.

Сравнивая текущий снимок с предыдущим, можно понять, насколько он изменился. Если он вообще не изменился или изменился только по некоторым начальным функциям (например, внутри ядра), то можно предположить, что процесс «завис». Случай deadlock’а на файле или базе данных еще проще, так как программа просто будет постоянно торчать на одной функции внутри ядра.

Понятно, что сравнение стеков должно все-таки учитывать особенности проверяемых процессов. Можно сделать его конфигурируемым, например, через регулярные выражения или скриптовой язык типа Lua.

Тема еще в том, что такой монитор не требует изменения в самом софте, и может быть написан на любом языке, например Руби или Питоне. По сути это просто работа с текстовыми данными.

Может я изобретаю велосипед?
