---
layout: post
title: 'Суета вокруг REST или Richardson L., Ruby S., "RESTful Web Services"'
language: russian
date: 2012-05-12 19:49
comments: true
categories: 
- book
- rest
- russian
---
В упор не пойму, как можно писать книги про REST. Зачем мучить клавиатуру и рожать аж целую книгу про тему, которую можно выразить в паре предложений?

[Leonard Richardson, Sam Ruby, "RESTful Web Services"][]

[Leonard Richardson, Sam Ruby, "RESTful Web Services"]: http://shop.oreilly.com/product/9780596529260.do

{% img /images/covers/english/restful-web-services-cover.gif %}

Итак, если опустить нудное описание HTTP библиотек Ruby, Python, Java и curl, еще более нудное описание форматов HTML4, XHTML, HTML5, Atom, XML, чуть менее нудное описание нескольких Ajax-библиотек, крайне нудное описание стандартных response-кодов HTTP, нереально нудное описание стандартных заголовков HTTP, то суть книги можно выразить весьма кратко. Вот REST в моем превратном, но кратком изложении.

При проектировании web-сервиса следует:

0. (Самое главное) При проектировании структуры URL'ов вложить в нее максимальное количество смысла, представляя это как некий язык запросов к вашим данным, читаемый и понимаемый **человеком**. Например, вместо `http://domain/engine.php?func=123&id=test` для получения данных о пользователе, должно быть `http://domain/users/test`.
1. Максимально полно использовать стандартные команды и коды ответов HTTP. Не только GET и POST, но и, например, PUT, DELETE, OPTION, HEAD, и не только коды ответа 200 и 500, а [множество других][HTTP response codes].
2. При проектировании HTTP-ответов следует добавлять в ответ информацию о возможных переходах из текущего состояния сессии в другие состояния.

[HTTP response codes]: http://en.wikipedia.org/wiki/List_of_HTTP_status_codes

Все! Вы знаете содержимое этой книги.

Редкий случай, когда ну очень хочется попросить деньги назад за книгу. Продать ее не получится, ибо электронная она.
